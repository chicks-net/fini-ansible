# secure mysql:
# - sets root password
# - removes test database
---
- name: stat /root/.my.cnf
  stat: path="/root/.my.cnf"
  register: root_my_cnf
- name: has the mysql root password already been set?
  fail: msg="the mysql root password already seems to be set"
  when: root_my_cnf.stat.isreg is defined and root_my_cnf.stat.isreg

- name: check mysql packages for OCS::Inventory
  apt: name={{ item }} state=present
  with_items:
   - mysql-server
   - mysql-client
   - libdbi-perl
   - libdbd-mysql-perl
   - libapache-dbi-perl
   - libsoap-lite-perl
   - percona-toolkit
   - python-mysqldb

- name: Start the MySQL service
  action: service name=mysql state=started

# 'localhost' needs to be the last item for idempotency, see
# http://ansible.cc/docs/modules.html#mysql-user
- name: update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mysql_root_password }}
  with_items:
   - "{{ ansible_hostname }}"
   - 127.0.0.1
   - ::1
   - localhost
  when: ansible_hostname != 'localhost' 

- name: update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mysql_root_password }}
  with_items:
   - 127.0.0.1
   - ::1
   - localhost
  when: ansible_hostname == 'localhost'

- name: copy .my.cnf file with root password credentials
  template: src=user_my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600

- name: copy .my.cnf file with root password credentials for PAREs
  template: src=user_my.cnf.j2 dest="/home/{{ item }}/.my.cnf" owner={{ item }} mode=0600
  with_items:
   - kacy
   - chicks

- name: delete anonymous MySQL server user for $server_hostname
  action: mysql_user user="" host="$server_hostname" state="absent"

- name: delete anonymous MySQL server user for localhost
  action: mysql_user user="" state="absent"

- name: remove the MySQL test database
  action: mysql_db db=test state=absent

## TODO: populate /etc/my.cnf
